
#--------------------------------------------------------------------------
#
# This Gmake file will compile the PARAMESH library and create a
# set of library files to which you can link. To use it, make sure
# it is in the PARAMESH root directory.
# It works by running gmake on the Makefile.gnu files which appear
# in the headers, source and mpi_source sub-directories.
# To simply create these PARAMESH library files, type
#     gmake -f Makefile.gnu
# when in the PARAMESH root directory. The library files will
# then be found in a newly created sub-directory called libs.
#
# If you type
#     gmake -f Makefile.gnu Tests
# it will also compile and link the test programs in the Tests
# sub-directory. There is a file called Makefile.gnu inside Tests
# which is used.
#
# To compile and link application files in a sub-directory called
# User_applic you could type
#     gmake -f Makefile.gnu User_applic
# provided you copy Makefile.gnu from Tests to User_applic, and modify
# it appropriately.
#
#
# Written : Ernest Mamikonyan        April 2002.
#
#--------------------------------------------------------------------------
export cur-dir := $(shell pwd)

# Set the location of the paramesh top directory
export paramesh_dir = $(cur-dir)
#export hdf5_dir=/usr/not-backed-up/jrg/local/hdf5-1.6.8/hdf5
#export hdf5_dir=/usr/

#export hdf5_dir=$(HOME)/hdf5
#export hdf5_dir=$(HOME)/SYSHDF5
#export hdf5_dir=$(HOME)/PhaseField/hdf5
#export hdf5_dir=$(HOME)/PHASEFIELD/hdf5
#export hdf5_dir=/usr/not-backed-up/PHASEFIELD/hdf5-1.6.10


export hdf5_dir=$(HDF5_DIR)



# Define the compilers

export FC = ftn
export CC = cc 

#-----------------------------------------------

# Set the desired compilation flags

# CEG Hector optimised
export FFLAGS = -O3 -I$(paramesh_dir)/headers -Mr8
export CFLAGS = -O3 -I$(paramesh_dir)/headers -I$(hdf5_dir)/include


export FFLAGS = -I$(paramesh_dir)/headers -Mr8
export CFLAGS = -I$(paramesh_dir)/headers -I$(hdf5_dir)/include

#export FFLAGS += -fast -Mipa=fast -Mpfi -Mpfo -Minline -Munroll -Mvect
#export FFLAGS += -fast -Mipa=fast -Minline -Munroll -Mvect

#export CFLAGS += -g -pg
#export FFLAGS += -g -pg
#for mpi 1.0.7
#export CFLAGS += -g -mpe=mpilog -DDOUBLE_UNDERSCORE
#export FFLAGS += -g -mpe=mpilog -assume 2underscores
#for 1.2.1
#export CFLAGS += -g -mpe=mpilog 
#export FFLAGS += -g -mpe=mpilog


#export FFLAGS += -Wall

export RM  += -r


#--------------------------------------------------------------------------

.PHONY: default
default: all


#-----------------------------------------------
debug: export FFLAGS += -g -check all -r8 -I$(paramesh_dir)/headers
debug: export CFLAGS += -g -Wall -I$(paramesh_dir)/headers -I$(hdf5_dir)/include
debug: default


OMP: export FFLAGS += -openmp
OMP: default
#--------------------------------------------------------------------------


.PHONY: all
ifdef SHMEM
all: libs headers source
else
all: libs headers mpi_source source
endif

.PHONY: headers
headers:
	$(MAKE) -C $(paramesh_dir)/$@ -f Makefile.PGI

.PHONY: mpi_source
mpi_source: headers
	$(MAKE) -C $(paramesh_dir)/$@ -f Makefile.PGI

.PHONY: source
source: headers
	$(MAKE) -C $(paramesh_dir)/$@ -f Makefile.PGI

.PHONY: clean
clean:
	$(RM) -r *~ libs/
	for dir in headers mpi_source source ; do \
	  $(MAKE) -C $(paramesh_dir)/$$dir -f Makefile.PGI clean; \
	done

.PHONY: Tests
Tests: all
	$(MAKE) -C $(paramesh_dir)/$@ -f Makefile.gnu

# An example target to match an application directory name other than Tests
# in which the users application files are located.
.PHONY: User_applic
User_applic: all
	$(MAKE) -C $(paramesh_dir)/$@ -f Makefile.gnu

libs:
	mkdir $@

